USE hr;

#1. Display all information in the tables EMP and DEPT.      
SELECT *
FROM employees;
  
SELECT *
FROM departments;

#2. Display only the hire date and employee name for each employee. 
SELECT hire_date, first_name, last_name
FROM employees;

# 3. Display the ename concatenated with the job ID, separated by a comma and space, and name the column Employee and Title
SELECT concat(email, ",", job_id) as Employee_and_Title
FROM employees;

#4. Display the hire date, name and department number for all clerks.  
SELECT employees.hire_date, employees.first_name, employees.last_name, departments.department_id
FROM departments
LEFT JOIN employees ON departments.department_id = employees.department_id
WHERE employees.job_id LIKE '%Clerk';

# 5. Create a query to display all the data from the EMP table. Separate each column by a comma. Name the column THE OUTPUT   
SELECT CONCAT_WS(",", employee_id, first_name, last_name, email,
	phone_number, hire_date, job_id, salary, commission_pct,
    manager_id, department_id) AS THE_OUTPUT
FROM employees;

#6. Display the names and salaries of all employees with a salary greater than 2000. 
SELECT first_name, last_name, salary
FROM employees
WHERE salary > 2000;

#7. Display the names and dates of employees with the column headers "Name" and "Start Date" 
SELECT CONCAT(first_name, " ", last_name) AS Name, hire_date AS Start_Date
FROM employees;


#8. Display the names and hire dates of all employees in the order they were hired.   
SELECT CONCAT(first_name, " ", last_name) AS Name, hire_date
FROM employees
ORDER BY hire_date;

#9. Display the names and salaries of all employees in reverse salary order.  
SELECT CONCAT(first_name, " ", last_name) AS Name, salary
FROM employees
ORDER BY salary DESC;

#10. Display 'ename" and "deptno" who are all earned commission and display salary in reverse order.   
SELECT CONCAT(first_name, " ", last_name) AS Name, department_id, salary, commission_pct
FROM employees
WHERE commission_pct IS NOT NULL
ORDER BY salary DESC;

#11. Display the last name and job title of all employees who do not have a manager   
SELECT employees.last_name, jobs.job_title
FROM employees
LEFT JOIN jobs ON employees.job_id = jobs.job_id
WHERE employees.manager_id IS NULL;

#12. Display the last name, job, and salary for all employees whose job is sales representative or stock clerk and whose salary is not equal to $2,500, $3,500, or $5,000 
SELECT e.last_name, j.job_title, e.salary
FROM employees AS e
LEFT JOIN jobs AS j ON e.job_id = j.job_id
WHERE (j.job_title = "Sales Representative" OR j.job_title = "Stock Clerk")
	AND e.salary NOT IN (2500, 3500, 5000);
    
# 1) Display the maximum, minimum and average salary and commission earned.  
SELECT MAX(salary) AS max_salary, MIN(salary) AS min_salary, AVG(salary) AS avg_salary,
	AVG(commission_pct) AS avg_commission
FROM employees;

#2) Display the department number, total salary payout and total commission payout for each department.
SELECT department_id, SUM(salary) AS total_salary, SUM(commission_pct) AS total_commission
FROM employees
GROUP BY department_id;

#3) Display the department number and number of employees in each department.
SELECT department_id, COUNT(*)
FROM employees
GROUP BY department_id;

#4) Display the department number and total salary of employees in each department.   
SELECT department_id, SUM(salary) AS total_salary
FROM employees
GROUP BY department_id;

# 5) Display the employee's name who doesn't earn a commission. Order the result set without using the column name   
SELECT CONCAT(first_name, " ", last_name) AS name, commission_pct
FROM employees
WHERE commission_pct IS NULL
ORDER BY 1;

#6) Display the employees name, department id and commission. If an Employee doesn't  earn the commission, then display as 'No commission'. Name the columns appropriately  
SELECT first_name, last_name, department_id, COALESCE(commission_pct, "No Commission") AS commission
FROM employees
ORDER BY commission DESC;

# 7) Display the employee's name, salary and commission multiplied by 2. If an Employee doesn't earn the commission, then display as 'No commission. Name the columns appropriately  
SELECT CONCAT(first_name, " ", last_name) AS name, salary, COALESCE(commission_pct*2, "No Commission")
	AS commission
FROM employees
ORDER BY commission;

#8) Display the employee's name, department id who have the first name same as another employee in the same department  
SELECT CONCAT(first_name, " ", last_name) AS name, department_id
FROM employees AS e1
WHERE e1.first_name IN (
	SELECT first_name
    FROM employees AS e2
    WHERE e1.employee_id <> e2.employee_id AND
		e1.department_id = e2.department_id)
ORDER BY first_name;

#9) Display the sum of salaries of the employees working under each Manager.   
SELECT manager_id, SUM(salary) AS total_salary
FROM employees
GROUP BY manager_id;

#10) Select the Managers name, the count of employees working under and the department ID of the manager. 
SELECT manager_id, COUNT(*)
FROM employees
GROUP BY manager_id;

#11) Select the employee name, department id, and the salary. Group the result with the manager name and the employee last name should have second letter 'a!   
SELECT CONCAT(first_name, " ", last_name) AS name, department_id, salary
FROM employees
WHERE last_name LIKE "_a%"
GROUP BY manager_id;

#12) Display the average of sum of the salaries and group the result with the department id. Order the result with the department id.   
SELECT department_id, SUM(salary) AS total_salary
FROM employees
GROUP BY department_id
ORDER BY department_id;


#13) Select the maximum salary of each department along with the department id   
SELECT department_id, MAX(salary) AS highest_salary
FROM employees
GROUP BY department_id;

#14) Display the commission, if not null display 10% of salary, if null display a default value 1 
SELECT commission_pct,
	CASE
		WHEN commission_pct IS NOT NULL THEN salary*0.1
		ELSE 1
    END AS commission
FROM employees;

#1. Write a query that displays the employee's last names only from the string's 2-5th position with the first letter capitalized and all other letters lowercase, Give each column an appropriate label.     
SELECT CONCAT(UPPER(SUBSTRING(last_name,2,1)), LOWER(SUBSTRING(last_name,3,3)))
FROM employees;

#2. Write a query that displays the employee's first name and last name along with a " in between for e.g.: first name : Ram; last name : Kumar then Ram-Kumar. Also displays the month on which the employee has joined.  
SELECT CONCAT(first_name, "-", last_name) AS name, MONTH(hire_date) AS hire_month
FROM employees;

#3. Write a query to display the employee's last name and if half of the salary is greater than ten thousand then increase the salary by 10% else by 11.5% along with the bonus amount of 1500 each. Provide each column an appropriate label.   
SELECT last_name, salary,
	CASE
		WHEN salary > 10000 THEN (salary*1.10)+1500
        ELSE (salary*1.15)+1500
	END AS salary_increment
FROM employees;

#4. Display the employee ID by Appending two zeros after 2nd digit and 'E' in the end, department id, salary and the manager name all in Upper case, if the Manager name consists of 'z' replace it with '$!   
SELECT CONCAT(SUBSTRING(employee_id, 1,3), 00, SUBSTRING(employee_id,3), "E") AS new_id,
	department_id, salary, manager_id
FROM employees;

#5. Write a query that displays the employee's last names with the first letter capitalized and all other letters lowercase, and the length of the names, for all employees whose name starts with J, A, or M. Give each column an appropriate label. Sort the results by the employees' last names   
SELECT CONCAT(UPPER(SUBSTRING(last_name, 1,1)), LOWER(SUBSTRING(last_name, 2))) last_name,
	LENGTH(last_name) AS length
FROM employees
WHERE last_name LIKE "J%" OR last_name LIKE "A%" OR last_name LIKE "M%";

#6. Create a query to display the last name and salary for all employees. Format the salary to be 15 characters long, left-padded with $. Label the column SALARY   
SELECT last_name, LPAD(salary, 15, "$") AS SALARY
FROM employees;

#7. Display the employee's name if it is a palindrome   
SELECT first_name, last_name
FROM employees
WHERE LOWER(first_name) = LOWER(REVERSE(first_name)) OR
	LOWER(last_name) = LOWER(REVERSE(last_name));

#8. Display First names of all employees with initcaps.  
SELECT CONCAT(UCASE(LEFT(first_name,1)), LCASE(SUBSTRING(first_name,2))) AS first_name
FROM employees;

#9. From LOCATIONS table, extract the word between first and second space from the STREET ADDRESS column.   
SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(street_address, " ", 2), " ", -1) AS second_word
FROM locations;

#10. Extract first letter from First Name column and append it with the Last Name. Also add "@systechusa.com" at the end. Name the column as e-mail address. All characters should be in lower case. Display this along with their First Name.   
SELECT LOWER(CONCAT(SUBSTRING(first_name, 1,1), last_name, "@systechusa.com")) AS email_address
FROM employees;

#11. Display the names and job titles of all employees with the same job as Trenna.
SELECT CONCAT(first_name, " ", last_name) AS name
FROM employees AS e1
WHERE e1.job_id IN (
	SELECT e2.job_id
    FROM employees AS e2
    WHERE first_name = "Trenna");

#12. Display the names and department name of all employees working in the same city as Trenna.   


#13. Display the name of the employee whose salary is the lowest.  
SELECT CONCAT(first_name, " ", last_name) AS name, salary
FROM employees
ORDER BY salary
LIMIT 1;

#14. Display the names of all employees except the lowest paid. 
SELECT CONCAT(first_name, " ", last_name) AS name
FROM employees
WHERE salary > (
	SELECT MIN(salary)
    FROM employees)
ORDER BY salary;

#1. Write a query to display the last name, department number, department name for all employees.  
SELECT e.last_name, e.department_id, d.department_name
FROM employees AS e
JOIN departments AS d ON e.department_id = d.department_id;

#2. Create a unique list of all jobs that are in department 4. Include the location of the department in the output.   

#3. Write a query to display the employee last name,department name,location id and city of all employees who earn commission.   
SELECT e.last_name, d.department_name, d.department_id, l.city
FROM employees AS e
LEFT JOIN departments AS d ON e.department_id = d.department_id
LEFT JOIN locations AS l ON d.location_id = l.location_id
WHERE commission_pct IS NOT NULL;

#4. Display the employee last name and department name of all employees who have an 'a' in their last name  
SELECT e.last_name, d.department_name
FROM employees AS e
LEFT JOIN departments AS d ON e.department_id = d.department_id
WHERE last_name LIKE "%a%";

#5. Write a query to display the last name,job,department number and department name for all employees who work in ATLANTA.   
SELECT e.last_name, j.job_title, e.department_id, d.department_id
FROM employees AS e
LEFT JOIN jobs AS j ON e.job_id = j.job_id
LEFT JOIN departments AS d ON e.department_id = d.department_id
LEFT JOIN locations AS l ON d.location_id = l.location_id
WHERE city = "Singapore";

#6. Display the employee last name and employee number along with their manager's last name and manager number.   

#7. Display the employee last name and employee number along with their manager's last name and manager number (including the employees who have no manager).  

#8. Create a query that displays employees last name,department number,and all the employees who work in the same department as a given employee.
SELECT e1.last_name, e1.department_id
FROM employees AS e1
WHERE e1.department_id IN (
	SELECT e2.department_id
    FROM employees AS e2
    WHERE e2.last_name = "Hunold");

#9. Create a query that displays the name,job,department name,salary,grade for all employees.  Derive grade based on salary(>=50000=A, >=30000=B,<30000=C)  
SELECT CONCAT(e.first_name, " ", e.last_name) AS name, j.job_title, d.department_name, e.salary,
CASE
	WHEN salary >= 15000 THEN "A"
    WHEN salary >= 10000 AND salary < 15000 THEN "B"
    WHEN salary < 10000 THEN "C"
END AS grade
FROM employees AS e
LEFT JOIN departments AS d ON e.department_id = d.department_id
LEFT JOIN jobs AS j ON e.job_id = j.job_id;

#10. Display the names and hire date for all employees who were hired before their managers along withe their manager names and hire date. Label the columns as Employee name, emp_hire_date,manager name,man_hire_date 

#1. Write a query to display the last name and hire date of any employee in the same department as SALES.   
SELECT e.last_name, e.hire_date
FROM employees AS e
LEFT JOIN departments AS d ON e.department_id = d.department_id
WHERE department_name = "Sales";

#2. Create a query to display the employee numbers and last names of all employees who earn more than the average salary. Sort the results in ascending order of salary.
SELECT employee_id, last_name, salary
FROM employees
WHERE salary > (
	SELECT AVG(salary)
    FROM employees);

#3. Write a query that displays the employee numbers and last names of all employees who work in a department with any employee whose last name contains a' u   
SELECT e1.employee_id, e1.last_name, e1.department_id
FROM employees AS e1
WHERE e1.department_id IN (SELECT e2.department_id
		FROM employees AS e2
        WHERE e2.last_name LIKE "%u%");

#4. Display the last name, department number, and job ID of all employees whose department location is ATLANTA.   
SELECT e.last_name, d.department_id, j.job_id
FROM employees AS e
LEFT JOIN departments AS d ON e.department_id = d.department_id
LEFT JOIN jobs AS j ON e.job_id = j.job_id
LEFT JOIN locations AS l ON d.location_id = l.location_id 
WHERE l.city = "Singapore";

#6. Display the department number, last name, and job ID for every employee in the OPERATIONS department.   
SELECT e.department_id, e.last_name, j.job_id
FROM employees AS e
LEFT JOIN jobs AS j ON e.job_id = j.job_id
WHERE job_title = "Accounting Manager";

#7. Modify the above query to display the employee numbers, last names, and salaries of all employees who earn more than the average salary and who work in a department with any employee with a 'u'in their name.   
SELECT e1.employee_id, e1.last_name, e1.salary, department_id
FROM employees AS e1
WHERE salary > (
	SELECT AVG(salary)
    FROM employees AS e2) AND 
     department_id IN (
		SELECT e3.department_id
        FROM employees AS e3
        WHERE e3.last_name LIKE "%u%");

#8. Display the names of all employees whose job title is the same as anyone in the sales dept.   
SELECT CONCAT(e.first_name, " ", e.last_name) AS name, job_title
FROM employees AS e
LEFT JOIN jobs As j ON e.job_id = j.job_id
WHERE j.job_title LIKE "%Sales%";

#9. Write a compound query to produce a list of employees showing raise percentages, employee IDs, and salaries. Employees in department 1 and 3 are given a 5% raise, employees in department 2 are given a 10% raise, employees in departments 4 and 5 are given a 15% raise, and employees in department 6 are not given a raise.   
SELECT CONCAT(first_name, " ", last_name) AS name, employee_id, salary,
CASE 
	WHEN department_id IN (10, 20, 50) THEN salary*1.05
    WHEN department_id IN (90, 100, 30) THEN salary*1.10
    WHEN department_id IN (80, 110, 60) THEN salary*1.15
    ELSE salary*1
END AS updated_salary
FROM employees;

#10. Write a query to display the top three earners in the EMPLOYEES table. Display their last names and salaries.
SELECT last_name, salary
FROM employees
ORDER BY salary DESC
LIMIT 3;

#11. Display the names of all employees with their salary and commission earned. Employees with a null commission should have O in the commission column
SELECT CONCAT(first_name, " ", last_name) AS name, salary, commission_pct,
CASE 
	WHEN commission_pct IS NOT NULL THEN commission_pct*salary
    ELSE 0
END AS commission
FROM employees;

#12. Display the Managers (name) with top three salaries along with their salaries and department information.

CREATE TABLE EmployeeDuration (
  Emp_ID INT,
  Hire_Date DATE,
  Resignation_Date DATE
);

INSERT INTO EmployeeDuration VALUES
  (1, '2000-01-01', '2013-07-10'),
  (2, '2003-04-12', '2017-03-08'),
  (3, '2012-09-22', '2015-06-21'),
  (4, '2015-04-13', NULL),
  (5, '2016-03-06', NULL),
  (6, '2017-08-08', NULL);

#1) Find the date difference between the hire date and resignation_date for all the employees. Display in no. of days, months and year(1 year 3 months 5 days).
SELECT Emp_id, Hire_Date, Resignation_Date,
DATEDIFF(Resignation_Date, Hire_Date) AS total_days,
  CONCAT(
    FLOOR(DATEDIFF(Resignation_Date, Hire_Date) / 365), " years ",
    FLOOR((DATEDIFF(Resignation_Date, Hire_Date) % 365) / 30), " months ",
    (DATEDIFF(Resignation_Date, Hire_Date) % 365) % 30, " days"
  ) AS Duration
FROM employeeduration;

#2) Format the hire date as mm/dd/yyyy(09/22/2003) and resignation_date as mon dd, yyyy(Aug 12th, 2004). Display the null as (DEC, 01th 1900)
SELECT Hire_Date, Resignation_Date,
FORMAT(Hire_Date, "MM/dd/yyyy") AS formatted_hire_date,
COALESCE(FORMAT(Resignation_Date, "Mon dd, yyyy"), "DEC, 01th 1990") AS formatted_res_date
FROM employeeduration;



